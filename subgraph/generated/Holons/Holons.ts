// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class NewFlavor extends ethereum.Event {
  get params(): NewFlavor__Params {
    return new NewFlavor__Params(this);
  }
}

export class NewFlavor__Params {
  _event: NewFlavor;

  constructor(event: NewFlavor) {
    this._event = event;
  }

  get flavor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class NewHolon extends ethereum.Event {
  get params(): NewHolon__Params {
    return new NewHolon__Params(this);
  }
}

export class NewHolon__Params {
  _event: NewHolon;

  constructor(event: NewHolon) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get addr(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Holons extends ethereum.SmartContract {
  static bind(address: Address): Holons {
    return new Holons("Holons", address);
  }

  getFlavorAddress(_name: string): Address {
    let result = super.call(
      "getFlavorAddress",
      "getFlavorAddress(string):(address)",
      [ethereum.Value.fromString(_name)],
    );

    return result[0].toAddress();
  }

  try_getFlavorAddress(_name: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFlavorAddress",
      "getFlavorAddress(string):(address)",
      [ethereum.Value.fromString(_name)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  knownflavors(param0: BigInt): string {
    let result = super.call("knownflavors", "knownflavors(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return result[0].toString();
  }

  try_knownflavors(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "knownflavors",
      "knownflavors(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  listFlavors(): Array<string> {
    let result = super.call("listFlavors", "listFlavors():(string[])", []);

    return result[0].toStringArray();
  }

  try_listFlavors(): ethereum.CallResult<Array<string>> {
    let result = super.tryCall("listFlavors", "listFlavors():(string[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  listHolons(): Array<Address> {
    let result = super.call("listHolons", "listHolons():(address[])", []);

    return result[0].toAddressArray();
  }

  try_listHolons(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("listHolons", "listHolons():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  listHolonsOf(_address: Address): Array<Address> {
    let result = super.call(
      "listHolonsOf",
      "listHolonsOf(address):(address[])",
      [ethereum.Value.fromAddress(_address)],
    );

    return result[0].toAddressArray();
  }

  try_listHolonsOf(_address: Address): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "listHolonsOf",
      "listHolonsOf(address):(address[])",
      [ethereum.Value.fromAddress(_address)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  newHolon(_flavor: string, _name: string, _parameter: BigInt): Address {
    let result = super.call(
      "newHolon",
      "newHolon(string,string,uint256):(address)",
      [
        ethereum.Value.fromString(_flavor),
        ethereum.Value.fromString(_name),
        ethereum.Value.fromUnsignedBigInt(_parameter),
      ],
    );

    return result[0].toAddress();
  }

  try_newHolon(
    _flavor: string,
    _name: string,
    _parameter: BigInt,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "newHolon",
      "newHolon(string,string,uint256):(address)",
      [
        ethereum.Value.fromString(_flavor),
        ethereum.Value.fromString(_name),
        ethereum.Value.fromUnsignedBigInt(_parameter),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  toAddress(param0: string): Address {
    let result = super.call("toAddress", "toAddress(string):(address)", [
      ethereum.Value.fromString(param0),
    ]);

    return result[0].toAddress();
  }

  try_toAddress(param0: string): ethereum.CallResult<Address> {
    let result = super.tryCall("toAddress", "toAddress(string):(address)", [
      ethereum.Value.fromString(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class NewFlavorCall extends ethereum.Call {
  get inputs(): NewFlavorCall__Inputs {
    return new NewFlavorCall__Inputs(this);
  }

  get outputs(): NewFlavorCall__Outputs {
    return new NewFlavorCall__Outputs(this);
  }
}

export class NewFlavorCall__Inputs {
  _call: NewFlavorCall;

  constructor(call: NewFlavorCall) {
    this._call = call;
  }

  get _flavorname(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _flavoraddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class NewFlavorCall__Outputs {
  _call: NewFlavorCall;

  constructor(call: NewFlavorCall) {
    this._call = call;
  }
}

export class NewHolonCall extends ethereum.Call {
  get inputs(): NewHolonCall__Inputs {
    return new NewHolonCall__Inputs(this);
  }

  get outputs(): NewHolonCall__Outputs {
    return new NewHolonCall__Outputs(this);
  }
}

export class NewHolonCall__Inputs {
  _call: NewHolonCall;

  constructor(call: NewHolonCall) {
    this._call = call;
  }

  get _flavor(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _parameter(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class NewHolonCall__Outputs {
  _call: NewHolonCall;

  constructor(call: NewHolonCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
